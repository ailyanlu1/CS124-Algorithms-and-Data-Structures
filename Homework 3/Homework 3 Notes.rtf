{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. First, let's note that we have a risk free exchange $r_\{i_1,i_2\}\\cdot r_\{i_2,i_3\} \'85 \\cdot r_\{i_\{k-1\},i_k\} \\cdot r_\{i_k,i_1\} > 1$ then if we take the log of each term and turn the product in to a sum we can see that $\\textup\{log\}(r_\{i_1,i_2\})+ \\textup\{log\}(r_\{i_2,i_3\})\'85 + \\textup\{log\}(r_\{i_\{k-1\},i_k\}) + \\textup\{log\}(r_\{i_k,i_1\}) > 0$.  Therefore if a risk free exchange existed and we took the negative log of each term in that sequence the sum would be negative.  \\\\\
Construct a graph where every vertex $c_i \\in V$ is equivalent to one of these currencies and every edge between two vertices $(c_i, c_j) is the negative logarithm of $r_\{i,j\}$, the exchange from currency $i$ to currency $j$.  Having a risk free exchange in this graph is equivalent to having a cycle in which the sum of the edges in the cycle is negative per the argument above.  Now run the algorithm described in class that detects negative cycles in O(|V||E|) time after perform |V|-1 rounds of updates over the edges.  Once it terminates due one more round of do one more round updates over the edges and distances calculated by the algorithm and if any changes occur during this final round of updates there must've been a negative cycle because if there were no negative cycles, |V|-1 rounds would've been enough.  If a negative cycle is detected, there a risk free exchange.  \
\
2.  \
	1. Remove the updated edge (u,v)\
	2. Do 2 DFS starting from u and from v and in a keep of track of which vertex is in which 	component with an array parts[ ]\
	3.  Iterate over the edges and keep track of the smallest weight edge whose endpoints are in 	part 0 and part 1 \
\
\
5.  }